/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int a,b,sum,jin=0;//a和b为两个l1和l2节点的值
        ListNode *ans = new ListNode(-1),*p = ans;//ans为最后返回值，p为每次相加后的节点
        
        while(l1 != NULL || l2 != NULL)
        {
            //初始化a和b
            if(l1 == NULL)
            {
                a = 0;
            }
            else
            {
                a = l1->val;
                l1 = l1->next;
            }
            
            if(l2 == NULL)
            {
                b = 0;
            }
            else
            {
                b = l2->val;
                l2 = l2->next;
            }
//算sum和进位值
            sum = (a + b + jin) % 10;
            jin = (a + b + jin) / 10;
            p->next = new ListNode(sum);
            p = p->next;//移动当前指针
            
        }
        if(jin != 0)//最后的进位
        {
            p->next = new ListNode(jin);
            p = p->next;
        }
            
        return ans->next;//去头节点
    }
};
